

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat May 16 10:07:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F26K20 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    63  0000                     
    64 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    65  0000                     
    66 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    67  0000                     
    68                           	psect	nvCOMRAM
    69  000001                     __pnvCOMRAM:
    70                           	callstack 0
    71  000001                     _EUSART_ErrorHandler:
    72                           	callstack 0
    73  000001                     	ds	2
    74  000003                     _EUSART_OverrunErrorHandler:
    75                           	callstack 0
    76  000003                     	ds	2
    77  000005                     _EUSART_FramingErrorHandler:
    78                           	callstack 0
    79  000005                     	ds	2
    80  0000                     _INTCONbits	set	4082
    81  0000                     _INTCON2bits	set	4081
    82  0000                     _WPUB	set	3964
    83  0000                     _ANSELH	set	3967
    84  0000                     _ANSEL	set	3966
    85  0000                     _TRISC	set	3988
    86  0000                     _TRISB	set	3987
    87  0000                     _TRISA	set	3986
    88  0000                     _LATC	set	3979
    89  0000                     _LATB	set	3978
    90  0000                     _LATA	set	3977
    91  0000                     _OSCTUNE	set	3995
    92  0000                     _OSCCON	set	4051
    93  0000                     _LATBbits	set	3978
    94  0000                     _TXREG	set	4013
    95  0000                     _RCREG	set	4014
    96  0000                     _RCSTAbits	set	4011
    97  0000                     _TXSTAbits	set	4012
    98  0000                     _PIR1bits	set	3998
    99  0000                     _SPBRGH	set	4016
   100  0000                     _SPBRG	set	4015
   101  0000                     _TXSTA	set	4012
   102  0000                     _RCSTA	set	4011
   103  0000                     _BAUDCON	set	4024
   104  0000                     _CVRCON2bits	set	4020
   105  0000                     _CVRCON2	set	4020
   106                           
   107                           	psect	smallconst
   108  001000                     __psmallconst:
   109                           	callstack 0
   110  001000  00                 	db	0
   111  001001                     STR_2:
   112  001001  50                 	db	80	;'P'
   113  001002  72                 	db	114	;'r'
   114  001003  65                 	db	101	;'e'
   115  001004  73                 	db	115	;'s'
   116  001005  73                 	db	115	;'s'
   117  001006  20                 	db	32
   118  001007  31                 	db	49	;'1'
   119  001008  20                 	db	32
   120  001009  66                 	db	102	;'f'
   121  00100A  6F                 	db	111	;'o'
   122  00100B  72                 	db	114	;'r'
   123  00100C  20                 	db	32
   124  00100D  42                 	db	66	;'B'
   125  00100E  6C                 	db	108	;'l'
   126  00100F  75                 	db	117	;'u'
   127  001010  65                 	db	101	;'e'
   128  001011  2C                 	db	44
   129  001012  20                 	db	32
   130  001013  32                 	db	50	;'2'
   131  001014  20                 	db	32
   132  001015  66                 	db	102	;'f'
   133  001016  6F                 	db	111	;'o'
   134  001017  72                 	db	114	;'r'
   135  001018  20                 	db	32
   136  001019  47                 	db	71	;'G'
   137  00101A  72                 	db	114	;'r'
   138  00101B  65                 	db	101	;'e'
   139  00101C  65                 	db	101	;'e'
   140  00101D  6E                 	db	110	;'n'
   141  00101E  2C                 	db	44
   142  00101F  20                 	db	32
   143  001020  33                 	db	51	;'3'
   144  001021  20                 	db	32
   145  001022  66                 	db	102	;'f'
   146  001023  6F                 	db	111	;'o'
   147  001024  72                 	db	114	;'r'
   148  001025  20                 	db	32
   149  001026  52                 	db	82	;'R'
   150  001027  65                 	db	101	;'e'
   151  001028  64                 	db	100	;'d'
   152  001029  20                 	db	32
   153  00102A  2E                 	db	46
   154  00102B  2E                 	db	46
   155  00102C  2E                 	db	46
   156  00102D  0D                 	db	13
   157  00102E  0A                 	db	10
   158  00102F  00                 	db	0
   159  001030                     STR_1:
   160  001030  57                 	db	87	;'W'
   161  001031  65                 	db	101	;'e'
   162  001032  6C                 	db	108	;'l'
   163  001033  63                 	db	99	;'c'
   164  001034  6F                 	db	111	;'o'
   165  001035  6D                 	db	109	;'m'
   166  001036  65                 	db	101	;'e'
   167  001037  20                 	db	32
   168  001038  74                 	db	116	;'t'
   169  001039  6F                 	db	111	;'o'
   170  00103A  20                 	db	32
   171  00103B  43                 	db	67	;'C'
   172  00103C  4F                 	db	79	;'O'
   173  00103D  33                 	db	51	;'3'
   174  00103E  32                 	db	50	;'2'
   175  00103F  36                 	db	54	;'6'
   176  001040  20                 	db	32
   177  001041  4C                 	db	76	;'L'
   178  001042  61                 	db	97	;'a'
   179  001043  62                 	db	98	;'b'
   180  001044  33                 	db	51	;'3'
   181  001045  0D                 	db	13
   182  001046  0A                 	db	10
   183  001047  00                 	db	0
   184  001048  00                 	db	0	; dummy byte at the end
   185  0000                     
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189  0011D2                     __pcinit:
   190                           	callstack 0
   191  0011D2                     start_initialization:
   192                           	callstack 0
   193  0011D2                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Clear objects allocated to COMRAM (2 bytes)
   197  0011D2  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   198  0011D4  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   199  0011D6                     end_of_initialization:
   200                           	callstack 0
   201  0011D6                     __end_of__initialization:
   202                           	callstack 0
   203  0011D6  0100               	movlb	0
   204  0011D8  EF25  F008         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207  00000C                     __pbssCOMRAM:
   208                           	callstack 0
   209  00000C                     _data:
   210                           	callstack 0
   211  00000C                     	ds	1
   212  00000D                     _eusartRxLastError:
   213                           	callstack 0
   214  00000D                     	ds	1
   215                           
   216                           	psect	cstackCOMRAM
   217  000007                     __pcstackCOMRAM:
   218                           	callstack 0
   219  000007                     EUSART_Write@txData:
   220                           	callstack 0
   221  000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   222                           	callstack 0
   223  000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   224                           	callstack 0
   225  000007                     EUSART_SetErrorHandler@interruptHandler:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  000007                     	ds	1
   230  000008                     send_string@x:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x1
   234  000008                     	ds	1
   235  000009                     
   236                           ; 1 bytes @ 0x2
   237  000009                     	ds	1
   238  00000A                     ??_main:
   239                           
   240                           ; 1 bytes @ 0x3
   241  00000A                     	ds	2
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 57 in file "main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;Total ram usage:        2 bytes
   267 ;; Hardware stack levels required when called:    3
   268 ;; This function calls:
   269 ;;		_EUSART_Read
   270 ;;		_SYSTEM_Initialize
   271 ;;		_send_string
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  00104A                     __ptext0:
   279                           	callstack 0
   280  00104A                     _main:
   281                           	callstack 28
   282  00104A                     
   283                           ;main.c: 60:     SYSTEM_Initialize();
   284  00104A  ECE0  F008         	call	_SYSTEM_Initialize	;wreg free
   285  00104E                     
   286                           ;main.c: 78:     send_string("Welcome to CO326 Lab3\r\n");
   287  00104E  0E30               	movlw	low STR_1
   288  001050  6E08               	movwf	send_string@x^0,c
   289  001052  0E10               	movlw	high STR_1
   290  001054  6E09               	movwf	(send_string@x+1)^0,c
   291  001056  EC91  F008         	call	_send_string	;wreg free
   292  00105A                     
   293                           ;main.c: 79:     _delay((unsigned long)((500)*(8000000/4000.0)));
   294  00105A  0E06               	movlw	6
   295  00105C  6E0B               	movwf	(??_main+1)^0,c
   296  00105E  0E13               	movlw	19
   297  001060  6E0A               	movwf	??_main^0,c
   298  001062  0EAE               	movlw	174
   299  001064                     u87:
   300  001064  2EE8               	decfsz	wreg,f,c
   301  001066  D7FE               	bra	u87
   302  001068  2E0A               	decfsz	??_main^0,f,c
   303  00106A  D7FC               	bra	u87
   304  00106C  2E0B               	decfsz	(??_main+1)^0,f,c
   305  00106E  D7FA               	bra	u87
   306  001070                     
   307                           ;main.c: 80:     send_string("Press 1 for Blue, 2 for Green, 3 for Red ...\r\n");
   308  001070  0E01               	movlw	low STR_2
   309  001072  6E08               	movwf	send_string@x^0,c
   310  001074  0E10               	movlw	high STR_2
   311  001076  6E09               	movwf	(send_string@x+1)^0,c
   312  001078  EC91  F008         	call	_send_string	;wreg free
   313  00107C                     l1012:
   314                           
   315                           ;main.c: 83:     {;main.c: 85:          data = EUSART_Read();
   316  00107C  ECAE  F008         	call	_EUSART_Read	;wreg free
   317  001080  6E0C               	movwf	_data^0,c
   318                           
   319                           ;main.c: 86:         switch(data){
   320  001082  EF57  F008         	goto	l1016
   321  001086                     l124:
   322  001086  808A               	bsf	138,0,c	;volatile
   323  001088  928A               	bcf	138,1,c	;volatile
   324  00108A  948A               	bcf	138,2,c	;volatile
   325  00108C  EF3E  F008         	goto	l1012
   326  001090                     l132:
   327  001090  828A               	bsf	138,1,c	;volatile
   328  001092  948A               	bcf	138,2,c	;volatile
   329  001094  908A               	bcf	138,0,c	;volatile
   330  001096  EF3E  F008         	goto	l1012
   331  00109A                     l139:
   332  00109A  848A               	bsf	138,2,c	;volatile
   333  00109C  908A               	bcf	138,0,c	;volatile
   334  00109E  928A               	bcf	138,1,c	;volatile
   335  0010A0  EF3E  F008         	goto	l1012
   336  0010A4                     l146:
   337  0010A4  948A               	bcf	138,2,c	;volatile
   338  0010A6  908A               	bcf	138,0,c	;volatile
   339  0010A8  928A               	bcf	138,1,c	;volatile
   340  0010AA  EF3E  F008         	goto	l1012
   341  0010AE                     l1016:
   342  0010AE  500C               	movf	_data^0,w,c
   343  0010B0  6E0A               	movwf	??_main^0,c
   344  0010B2  6A0B               	clrf	(??_main+1)^0,c
   345                           
   346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   347                           ; Switch size 1, requested type "simple"
   348                           ; Number of cases is 1, Range of values is 0 to 0
   349                           ; switch strategies available:
   350                           ; Name         Instructions Cycles
   351                           ; simple_byte            4     3 (average)
   352                           ;	Chosen strategy is simple_byte
   353  0010B4  500B               	movf	(??_main+1)^0,w,c
   354  0010B6  0A00               	xorlw	0	; case 0
   355  0010B8  B4D8               	btfsc	status,2,c
   356  0010BA  EF61  F008         	goto	l1026
   357  0010BE  EF52  F008         	goto	l146
   358  0010C2                     l1026:
   359                           
   360                           ; Switch size 1, requested type "simple"
   361                           ; Number of cases is 3, Range of values is 49 to 51
   362                           ; switch strategies available:
   363                           ; Name         Instructions Cycles
   364                           ; simple_byte           10     6 (average)
   365                           ;	Chosen strategy is simple_byte
   366  0010C2  500A               	movf	??_main^0,w,c
   367  0010C4  0A31               	xorlw	49	; case 49
   368  0010C6  B4D8               	btfsc	status,2,c
   369  0010C8  EF43  F008         	goto	l124
   370  0010CC  0A03               	xorlw	3	; case 50
   371  0010CE  B4D8               	btfsc	status,2,c
   372  0010D0  EF48  F008         	goto	l132
   373  0010D4  0A01               	xorlw	1	; case 51
   374  0010D6  B4D8               	btfsc	status,2,c
   375  0010D8  EF4D  F008         	goto	l139
   376  0010DC  EF52  F008         	goto	l146
   377  0010E0  EF00  F000         	goto	start
   378  0010E4                     __end_of_main:
   379                           	callstack 0
   380                           
   381 ;; *************** function _send_string *****************
   382 ;; Defined at:
   383 ;;		line 51 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;  x               2    1[COMRAM] PTR const unsigned char 
   386 ;;		 -> STR_2(47), STR_1(24), 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;Total ram usage:        2 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; Hardware stack levels required when called:    1
   405 ;; This function calls:
   406 ;;		_EUSART_Write
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413  001122                     __ptext1:
   414                           	callstack 0
   415  001122                     _send_string:
   416                           	callstack 29
   417  001122                     
   418                           ;main.c: 52:     while(*x){
   419  001122  EF9E  F008         	goto	l998
   420  001126                     l994:
   421                           
   422                           ;main.c: 53:         EUSART_Write(*x++);
   423  001126  C008  FFF6         	movff	send_string@x,tblptrl
   424  00112A  C009  FFF7         	movff	send_string@x+1,tblptrh
   425  00112E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   426  00112E  6AF8               	clrf	tblptru,c
   427  001130                     	endif
   428  001130                     	if	0	;tblptru may be non-zero
   429  001130                     	endif
   430  001130  0008               	tblrd		*
   431  001132  50F5               	movf	tablat,w,c
   432  001134  ECD5  F008         	call	_EUSART_Write
   433  001138  4A08               	infsnz	send_string@x^0,f,c
   434  00113A  2A09               	incf	(send_string@x+1)^0,f,c
   435  00113C                     l998:
   436                           
   437                           ;main.c: 52:     while(*x){
   438  00113C  C008  FFF6         	movff	send_string@x,tblptrl
   439  001140  C009  FFF7         	movff	send_string@x+1,tblptrh
   440  001144                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   441  001144  6AF8               	clrf	tblptru,c
   442  001146                     	endif
   443  001146                     	if	0	;tblptru may be non-zero
   444  001146                     	endif
   445  001146  0008               	tblrd		*
   446  001148  50F5               	movf	tablat,w,c
   447  00114A  0900               	iorlw	0
   448  00114C  A4D8               	btfss	status,2,c
   449  00114E  EFAB  F008         	goto	u71
   450  001152  EFAD  F008         	goto	u70
   451  001156                     u71:
   452  001156  EF93  F008         	goto	l994
   453  00115A                     u70:
   454  00115A  0012               	return		;funcret
   455  00115C                     __end_of_send_string:
   456                           	callstack 0
   457                           
   458 ;; *************** function _EUSART_Write *****************
   459 ;; Defined at:
   460 ;;		line 132 in file "mcc_generated_files/eusart.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  txData          1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  txData          1    0[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        1 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_send_string
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text2
   488  0011AA                     __ptext2:
   489                           	callstack 0
   490  0011AA                     _EUSART_Write:
   491                           	callstack 29
   492                           
   493                           ;incstack = 0
   494                           ;EUSART_Write@txData stored from wreg
   495  0011AA  6E07               	movwf	EUSART_Write@txData^0,c
   496  0011AC                     l77:
   497                           
   498                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   499  0011AC  A89E               	btfss	158,4,c	;volatile
   500  0011AE  EFDB  F008         	goto	u11
   501  0011B2  EFDD  F008         	goto	u10
   502  0011B6                     u11:
   503  0011B6  EFD6  F008         	goto	l77
   504  0011BA                     u10:
   505  0011BA                     
   506                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   507  0011BA  C007  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   508  0011BE  0012               	return		;funcret
   509  0011C0                     __end_of_EUSART_Write:
   510                           	callstack 0
   511                           
   512 ;; *************** function _SYSTEM_Initialize *****************
   513 ;; Defined at:
   514 ;;		line 50 in file "mcc_generated_files/mcc.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    2
   535 ;; This function calls:
   536 ;;		_EUSART_Initialize
   537 ;;		_FVR_Initialize
   538 ;;		_OSCILLATOR_Initialize
   539 ;;		_PIN_MANAGER_Initialize
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text3
   546  0011C0                     __ptext3:
   547                           	callstack 0
   548  0011C0                     _SYSTEM_Initialize:
   549                           	callstack 28
   550  0011C0                     
   551                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   552  0011C0  ECC2  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   553                           
   554                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   555  0011C4  ECEE  F008         	call	_OSCILLATOR_Initialize	;wreg free
   556                           
   557                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
   558  0011C8  EC02  F009         	call	_FVR_Initialize	;wreg free
   559  0011CC                     
   560                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
   561  0011CC  EC72  F008         	call	_EUSART_Initialize	;wreg free
   562  0011D0  0012               	return		;funcret
   563  0011D2                     __end_of_SYSTEM_Initialize:
   564                           	callstack 0
   565                           
   566 ;; *************** function _PIN_MANAGER_Initialize *****************
   567 ;; Defined at:
   568 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_SYSTEM_Initialize
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text4
   596  001184                     __ptext4:
   597                           	callstack 0
   598  001184                     _PIN_MANAGER_Initialize:
   599                           	callstack 29
   600  001184                     
   601                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   602  001184  0E00               	movlw	0
   603  001186  6E89               	movwf	137,c	;volatile
   604                           
   605                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   606  001188  0E00               	movlw	0
   607  00118A  6E8A               	movwf	138,c	;volatile
   608                           
   609                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   610  00118C  0E00               	movlw	0
   611  00118E  6E8B               	movwf	139,c	;volatile
   612  001190                     
   613                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   614  001190  6892               	setf	146,c	;volatile
   615                           
   616                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
   617  001192  0EF8               	movlw	248
   618  001194  6E93               	movwf	147,c	;volatile
   619                           
   620                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   621  001196  0EBF               	movlw	191
   622  001198  6E94               	movwf	148,c	;volatile
   623                           
   624                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x1F;
   625  00119A  0E1F               	movlw	31
   626  00119C  6E7E               	movwf	126,c	;volatile
   627                           
   628                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
   629  00119E  0E1F               	movlw	31
   630  0011A0  6E7F               	movwf	127,c	;volatile
   631                           
   632                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   633  0011A2  0E00               	movlw	0
   634  0011A4  6E7C               	movwf	124,c	;volatile
   635  0011A6                     
   636                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   637  0011A6  8EF1               	bsf	241,7,c	;volatile
   638  0011A8  0012               	return		;funcret
   639  0011AA                     __end_of_PIN_MANAGER_Initialize:
   640                           	callstack 0
   641                           
   642 ;; *************** function _OSCILLATOR_Initialize *****************
   643 ;; Defined at:
   644 ;;		line 59 in file "mcc_generated_files/mcc.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_SYSTEM_Initialize
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text5
   672  0011DC                     __ptext5:
   673                           	callstack 0
   674  0011DC                     _OSCILLATOR_Initialize:
   675                           	callstack 29
   676  0011DC                     
   677                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x62;
   678  0011DC  0E62               	movlw	98
   679  0011DE  6ED3               	movwf	211,c	;volatile
   680                           
   681                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   682  0011E0  0E00               	movlw	0
   683  0011E2  6E9B               	movwf	155,c	;volatile
   684  0011E4  0012               	return		;funcret
   685  0011E6                     __end_of_OSCILLATOR_Initialize:
   686                           	callstack 0
   687                           
   688 ;; *************** function _FVR_Initialize *****************
   689 ;; Defined at:
   690 ;;		line 58 in file "mcc_generated_files/fvr.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_SYSTEM_Initialize
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text6
   718  001204                     __ptext6:
   719                           	callstack 0
   720  001204                     _FVR_Initialize:
   721                           	callstack 29
   722  001204                     
   723                           ;mcc_generated_files/fvr.c: 61:     CVRCON2 = 0x80;
   724  001204  0E80               	movlw	128
   725  001206  6EB4               	movwf	180,c	;volatile
   726  001208  0012               	return		;funcret
   727  00120A                     __end_of_FVR_Initialize:
   728                           	callstack 0
   729                           
   730 ;; *************** function _EUSART_Initialize *****************
   731 ;; Defined at:
   732 ;;		line 66 in file "mcc_generated_files/eusart.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    1
   753 ;; This function calls:
   754 ;;		_EUSART_SetErrorHandler
   755 ;;		_EUSART_SetFramingErrorHandler
   756 ;;		_EUSART_SetOverrunErrorHandler
   757 ;; This function is called by:
   758 ;;		_SYSTEM_Initialize
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text7
   763  0010E4                     __ptext7:
   764                           	callstack 0
   765  0010E4                     _EUSART_Initialize:
   766                           	callstack 28
   767  0010E4                     
   768                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   769  0010E4  0E08               	movlw	8
   770  0010E6  6EB8               	movwf	184,c	;volatile
   771                           
   772                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   773  0010E8  0E90               	movlw	144
   774  0010EA  6EAB               	movwf	171,c	;volatile
   775                           
   776                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   777  0010EC  0E24               	movlw	36
   778  0010EE  6EAC               	movwf	172,c	;volatile
   779                           
   780                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   781  0010F0  0ECF               	movlw	207
   782  0010F2  6EAF               	movwf	175,c	;volatile
   783                           
   784                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   785  0010F4  0E00               	movlw	0
   786  0010F6  6EB0               	movwf	176,c	;volatile
   787  0010F8                     
   788                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   789  0010F8  0E00               	movlw	0
   790  0010FA  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   791  0010FC  0E00               	movlw	0
   792  0010FE  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   793  001100  ECF8  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
   794  001104                     
   795                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   796  001104  0E00               	movlw	0
   797  001106  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   798  001108  0E00               	movlw	0
   799  00110A  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   800  00110C  ECF3  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   801  001110                     
   802                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   803  001110  0E00               	movlw	0
   804  001112  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   805  001114  0E00               	movlw	0
   806  001116  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   807  001118  ECFD  F008         	call	_EUSART_SetErrorHandler	;wreg free
   808  00111C                     
   809                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   810  00111C  0E00               	movlw	0
   811  00111E  6E0D               	movwf	_eusartRxLastError^0,c	;volatile
   812  001120  0012               	return		;funcret
   813  001122                     __end_of_EUSART_Initialize:
   814                           	callstack 0
   815                           
   816 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   817 ;; Defined at:
   818 ;;		line 161 in file "mcc_generated_files/eusart.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   821 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_EUSART_Initialize
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text8
   847  0011E6                     __ptext8:
   848                           	callstack 0
   849  0011E6                     _EUSART_SetOverrunErrorHandler:
   850                           	callstack 28
   851  0011E6                     
   852                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   853  0011E6  C007  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   854  0011EA  C008  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   855  0011EE  0012               	return		;funcret
   856  0011F0                     __end_of_EUSART_SetOverrunErrorHandler:
   857                           	callstack 0
   858                           
   859 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   860 ;; Defined at:
   861 ;;		line 157 in file "mcc_generated_files/eusart.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   864 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_EUSART_Initialize
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text9
   890  0011F0                     __ptext9:
   891                           	callstack 0
   892  0011F0                     _EUSART_SetFramingErrorHandler:
   893                           	callstack 28
   894  0011F0                     
   895                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   896  0011F0  C007  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   897  0011F4  C008  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   898  0011F8  0012               	return		;funcret
   899  0011FA                     __end_of_EUSART_SetFramingErrorHandler:
   900                           	callstack 0
   901                           
   902 ;; *************** function _EUSART_SetErrorHandler *****************
   903 ;; Defined at:
   904 ;;		line 165 in file "mcc_generated_files/eusart.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   907 ;;		 -> EUSART_DefaultErrorHandler(1), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_EUSART_Initialize
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text10
   933  0011FA                     __ptext10:
   934                           	callstack 0
   935  0011FA                     _EUSART_SetErrorHandler:
   936                           	callstack 28
   937  0011FA                     
   938                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   939  0011FA  C007  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   940  0011FE  C008  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   941  001202  0012               	return		;funcret
   942  001204                     __end_of_EUSART_SetErrorHandler:
   943                           	callstack 0
   944                           
   945 ;; *************** function _EUSART_Read *****************
   946 ;; Defined at:
   947 ;;		line 113 in file "mcc_generated_files/eusart.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      unsigned char 
   954 ;; Registers used:
   955 ;;		wreg, status,2
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text11
   975  00115C                     __ptext11:
   976                           	callstack 0
   977  00115C                     _EUSART_Read:
   978                           	callstack 30
   979  00115C                     l70:
   980                           
   981                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RC1IF)
   982  00115C  AA9E               	btfss	158,5,c	;volatile
   983  00115E  EFB3  F008         	goto	u21
   984  001162  EFB5  F008         	goto	u20
   985  001166                     u21:
   986  001166  EFAE  F008         	goto	l70
   987  00116A                     u20:
   988  00116A                     
   989                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
   990  00116A  0E00               	movlw	0
   991  00116C  6E0D               	movwf	_eusartRxLastError^0,c	;volatile
   992  00116E                     
   993                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
   994  00116E  A2AB               	btfss	171,1,c	;volatile
   995  001170  EFBC  F008         	goto	u31
   996  001174  EFBE  F008         	goto	u30
   997  001178                     u31:
   998  001178  EFC0  F008         	goto	l914
   999  00117C                     u30:
  1000  00117C                     
  1001                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  1002  00117C  98AB               	bcf	171,4,c	;volatile
  1003                           
  1004                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  1005  00117E  88AB               	bsf	171,4,c	;volatile
  1006  001180                     l914:
  1007                           
  1008                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  1009  001180  50AE               	movf	174,w,c	;volatile
  1010  001182  0012               	return		;funcret
  1011  001184                     __end_of_EUSART_Read:
  1012                           	callstack 0
  1013                           
  1014                           	psect	rparam
  1015  0000                     
  1016                           	psect	idloc
  1017                           
  1018                           ;Config register IDLOC0 @ 0x200000
  1019                           ;	unspecified, using default values
  1020  200000                     	org	2097152
  1021  200000  FF                 	db	255
  1022                           
  1023                           ;Config register IDLOC1 @ 0x200001
  1024                           ;	unspecified, using default values
  1025  200001                     	org	2097153
  1026  200001  FF                 	db	255
  1027                           
  1028                           ;Config register IDLOC2 @ 0x200002
  1029                           ;	unspecified, using default values
  1030  200002                     	org	2097154
  1031  200002  FF                 	db	255
  1032                           
  1033                           ;Config register IDLOC3 @ 0x200003
  1034                           ;	unspecified, using default values
  1035  200003                     	org	2097155
  1036  200003  FF                 	db	255
  1037                           
  1038                           ;Config register IDLOC4 @ 0x200004
  1039                           ;	unspecified, using default values
  1040  200004                     	org	2097156
  1041  200004  FF                 	db	255
  1042                           
  1043                           ;Config register IDLOC5 @ 0x200005
  1044                           ;	unspecified, using default values
  1045  200005                     	org	2097157
  1046  200005  FF                 	db	255
  1047                           
  1048                           ;Config register IDLOC6 @ 0x200006
  1049                           ;	unspecified, using default values
  1050  200006                     	org	2097158
  1051  200006  FF                 	db	255
  1052                           
  1053                           ;Config register IDLOC7 @ 0x200007
  1054                           ;	unspecified, using default values
  1055  200007                     	org	2097159
  1056  200007  FF                 	db	255
  1057                           
  1058                           	psect	config
  1059                           
  1060                           ; Padding undefined space
  1061  300000                     	org	3145728
  1062  300000  FF                 	db	255
  1063                           
  1064                           ;Config register CONFIG1H @ 0x300001
  1065                           ;	Oscillator Selection bits
  1066                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1067                           ;	Fail-Safe Clock Monitor Enable bit
  1068                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1069                           ;	Internal/External Oscillator Switchover bit
  1070                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1071  300001                     	org	3145729
  1072  300001  08                 	db	8
  1073                           
  1074                           ;Config register CONFIG2L @ 0x300002
  1075                           ;	Power-up Timer Enable bit
  1076                           ;	PWRT = OFF, PWRT disabled
  1077                           ;	Brown-out Reset Enable bits
  1078                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1079                           ;	Brown Out Reset Voltage bits
  1080                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1081  300002                     	org	3145730
  1082  300002  1F                 	db	31
  1083                           
  1084                           ;Config register CONFIG2H @ 0x300003
  1085                           ;	Watchdog Timer Enable bit
  1086                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1087                           ;	Watchdog Timer Postscale Select bits
  1088                           ;	WDTPS = 32768, 1:32768
  1089  300003                     	org	3145731
  1090  300003  1E                 	db	30
  1091                           
  1092                           ; Padding undefined space
  1093  300004                     	org	3145732
  1094  300004  FF                 	db	255
  1095                           
  1096                           ;Config register CONFIG3H @ 0x300005
  1097                           ;	CCP2 MUX bit
  1098                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1099                           ;	PORTB A/D Enable bit
  1100                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1101                           ;	Low-Power Timer1 Oscillator Enable bit
  1102                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1103                           ;	HFINTOSC Fast Start-up
  1104                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1105                           ;	MCLR Pin Enable bit
  1106                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pi  1107  300005                     	org	3145733
  1108  300005  89                 	db	137
  1109                           
  1110                           ;Config register CONFIG4L @ 0x300006
  1111                           ;	Stack Full/Underflow Reset Enable bit
  1112                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1113                           ;	Single-Supply ICSP Enable bit
  1114                           ;	LVP = ON, Single-Supply ICSP enabled
  1115                           ;	Extended Instruction Set Enable bit
  1116                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1117                           ;	Background Debugger Enable bit
  1118                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1119  300006                     	org	3145734
  1120  300006  85                 	db	133
  1121                           
  1122                           ; Padding undefined space
  1123  300007                     	org	3145735
  1124  300007  FF                 	db	255
  1125                           
  1126                           ;Config register CONFIG5L @ 0x300008
  1127                           ;	Code Protection Block 0
  1128                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1129                           ;	Code Protection Block 1
  1130                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1131                           ;	Code Protection Block 2
  1132                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1133                           ;	Code Protection Block 3
  1134                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1135  300008                     	org	3145736
  1136  300008  0F                 	db	15
  1137                           
  1138                           ;Config register CONFIG5H @ 0x300009
  1139                           ;	Boot Block Code Protection bit
  1140                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1141                           ;	Data EEPROM Code Protection bit
  1142                           ;	CPD = OFF, Data EEPROM not code-protected
  1143  300009                     	org	3145737
  1144  300009  C0                 	db	192
  1145                           
  1146                           ;Config register CONFIG6L @ 0x30000A
  1147                           ;	Write Protection Block 0
  1148                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1149                           ;	Write Protection Block 1
  1150                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1151                           ;	Write Protection Block 2
  1152                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1153                           ;	Write Protection Block 3
  1154                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1155  30000A                     	org	3145738
  1156  30000A  0F                 	db	15
  1157                           
  1158                           ;Config register CONFIG6H @ 0x30000B
  1159                           ;	Configuration Register Write Protection bit
  1160                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1161                           ;	Boot Block Write Protection bit
  1162                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1163                           ;	Data EEPROM Write Protection bit
  1164                           ;	WRTD = OFF, Data EEPROM not write-protected
  1165  30000B                     	org	3145739
  1166  30000B  E0                 	db	224
  1167                           
  1168                           ;Config register CONFIG7L @ 0x30000C
  1169                           ;	Table Read Protection Block 0
  1170                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1171                           ;	Table Read Protection Block 1
  1172                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1173                           ;	Table Read Protection Block 2
  1174                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1175                           ;	Table Read Protection Block 3
  1176                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1177  30000C                     	org	3145740
  1178  30000C  0F                 	db	15
  1179                           
  1180                           ;Config register CONFIG7H @ 0x30000D
  1181                           ;	Boot Block Table Read Protection bit
  1182                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1183  30000D                     	org	3145741
  1184  30000D  40                 	db	64
  1185                           tosu	equ	0xFFF
  1186                           tosh	equ	0xFFE
  1187                           tosl	equ	0xFFD
  1188                           stkptr	equ	0xFFC
  1189                           pclatu	equ	0xFFB
  1190                           pclath	equ	0xFFA
  1191                           pcl	equ	0xFF9
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           prodh	equ	0xFF4
  1197                           prodl	equ	0xFF3
  1198                           indf0	equ	0xFEF
  1199                           postinc0	equ	0xFEE
  1200                           postdec0	equ	0xFED
  1201                           preinc0	equ	0xFEC
  1202                           plusw0	equ	0xFEB
  1203                           fsr0h	equ	0xFEA
  1204                           fsr0l	equ	0xFE9
  1205                           wreg	equ	0xFE8
  1206                           indf1	equ	0xFE7
  1207                           postinc1	equ	0xFE6
  1208                           postdec1	equ	0xFE5
  1209                           preinc1	equ	0xFE4
  1210                           plusw1	equ	0xFE3
  1211                           fsr1h	equ	0xFE2
  1212                           fsr1l	equ	0xFE1
  1213                           bsr	equ	0xFE0
  1214                           indf2	equ	0xFDF
  1215                           postinc2	equ	0xFDE
  1216                           postdec2	equ	0xFDD
  1217                           preinc2	equ	0xFDC
  1218                           plusw2	equ	0xFDB
  1219                           fsr2h	equ	0xFDA
  1220                           fsr2l	equ	0xFD9
  1221                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    send_string@x	PTR const unsigned char  size(2) Largest target is 47
		 -> STR_2(CODE[47]), STR_1(CODE[24]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_send_string
    _send_string->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     506
                                              3 COMRAM     2     2      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     212
                                              1 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       D       1       13.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      32        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat May 16 10:07:44 2020

                                            l7 1208                                             l53 1120  
                                           l70 115C                                             l80 11BE  
                                           l74 1182                                             l92 11F8  
                                           l77 11AC                                             l95 11EE  
                                           l98 1202                                             u10 11BA  
                                           u11 11B6                                             u20 116A  
                                           u21 1166                                             u30 117C  
                                           u31 1178                                             u70 115A  
                                           u71 1156                                             u87 1064  
                       __end_of_FVR_Initialize 120A                                            l116 115A  
                                          l132 1090                                            l124 1086  
                                          l141 109C                                            l150 10A8  
                                          l134 1092                                            l126 1088  
                                          l143 109E                                            l136 1094  
                                          l128 108A                                            l146 10A4  
                                          l139 109A                                            l172 11E4  
                                          l148 10A6                                            l169 11D0  
                                          l197 11A8                                            l900 1190  
                                          l910 116E                                            l902 11A6  
                                          l912 117C                                            l904 11DC  
                                          l914 1180                                            l906 115C  
                                          l908 116A                                            l882 1204  
                                          l980 11FA                                            l990 111C  
                                          l982 10E4                                            l894 11AC  
                                          l976 11F0                                            l984 10F8  
                                          l896 11BA                                            l992 1122  
                                          l978 11E6                                            l986 1104  
                                          l898 1184                                            l994 1126  
                                          l988 1110                                            l996 1138  
                                          l998 113C                 ?_EUSART_SetFramingErrorHandler 0007  
                                          wreg 000FE8                                   ?_EUSART_Read 0007  
                                         l1000 11C0                                           l1002 11CC  
                                         l1010 1070                                           l1012 107C  
                                         l1004 104A                                           l1006 104E  
                                         l1016 10AE                                           l1008 105A  
                                         l1026 10C2                                           STR_1 1030  
                                         STR_2 1001                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _WPUB 000F7C                                           _data 000C  
                                         _main 104A                                           start 0000  
                                 ___param_bank 000000                                ?_FVR_Initialize 0007  
                                ?_EUSART_Write 0007                 __size_of_OSCILLATOR_Initialize 000A  
                __end_of_OSCILLATOR_Initialize 11E6                                          ?_main 0007  
                                        _ANSEL 000F7E                                          _RCREG 000FAE  
                                        _RCSTA 000FAB                                          _SPBRG 000FAF  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                                          tablat 000FF5  
                                        status 000FD8                                __initialization 11D2  
                                 __end_of_main 10E4                                 ??_EUSART_Write 0007  
                                       ??_main 000A                                  __activetblptr 000003  
            _EUSART_DefaultFramingErrorHandler 000000                     _EUSART_OverrunErrorHandler 0003  
                                       _ANSELH 000F7F                                   ?_send_string 0008  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                 __mediumconst 0000                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         __size_of_EUSART_Read 0028                              _SYSTEM_Initialize 11C0  
                                   __accesstop 0060                        __end_of__initialization 11D6  
                           ?_SYSTEM_Initialize 0007                                  ___rparam_used 000001  
                               __pcstackCOMRAM 0007                            ??_SYSTEM_Initialize 0009  
              ??_EUSART_SetOverrunErrorHandler 0009                      __end_of_SYSTEM_Initialize 11D2  
                         __end_of_EUSART_Write 11C0                                     __pnvCOMRAM 0001  
                             ??_FVR_Initialize 0007                                        _BAUDCON 000FB8  
                                      _CVRCON2 000FB4                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0009                           __size_of_send_string 003A  
                                      __Hparam 0000                                        __Lparam 0000  
                                 __psmallconst 1000                                        __pcinit 11D2  
                                      __ramtop 1000                                        __ptext0 104A  
                                      __ptext1 1122                                        __ptext2 11AA  
                                      __ptext3 11C0                                        __ptext4 1184  
                                      __ptext5 11DC                                        __ptext6 1204  
                                      __ptext7 10E4                                        __ptext8 11E6  
                                      __ptext9 11F0                          _OSCILLATOR_Initialize 11DC  
                     ??_PIN_MANAGER_Initialize 0007                     __size_of_SYSTEM_Initialize 0012  
                         end_of_initialization 11D6          __end_of_EUSART_SetOverrunErrorHandler 11F0  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 11E6  
                            _EUSART_Initialize 10E4                             ?_EUSART_Initialize 0007  
                                    _RCSTAbits 000FAB                            ??_EUSART_Initialize 0009  
                        __size_of_EUSART_Write 0016                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 1122                                      _TXSTAbits 000FAC  
                   _EUSART_DefaultErrorHandler 000000                                   _EUSART_Write 11AA  
                       ?_OSCILLATOR_Initialize 0007                            start_initialization 11D2  
              __size_of_PIN_MANAGER_Initialize 0026                                  ??_EUSART_Read 0007  
               ?_EUSART_SetOverrunErrorHandler 0007                     _EUSART_FramingErrorHandler 0005  
                       _EUSART_SetErrorHandler 11FA                                    __pbssCOMRAM 000C  
                   __size_of_EUSART_Initialize 003E                            __end_of_EUSART_Read 1184  
                       _PIN_MANAGER_Initialize 1184                                    __smallconst 1000  
                                ??_send_string 000A         EUSART_SetErrorHandler@interruptHandler 0007  
                                     _LATBbits 000F8A                              _eusartRxLastError 000D  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 0009  
                                  _CVRCON2bits 000FB4              _EUSART_DefaultOverrunErrorHandler 000000  
                      __size_of_FVR_Initialize 0006                                    _EUSART_Read 115C  
                                  _INTCON2bits 000FF1                                       __Hrparam 0000  
                                 send_string@x 0008                            __end_of_send_string 115C  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0007  
                          _EUSART_ErrorHandler 0001                                       __ptext10 11FA  
                                     __ptext11 115C                                  __size_of_main 009A  
                      ?_EUSART_SetErrorHandler 0007  EUSART_SetOverrunErrorHandler@interruptHandler 0007  
        __end_of_EUSART_SetFramingErrorHandler 11FA         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 11F0                                     _INTCONbits 000FF2  
                                  _send_string 1122                        ?_PIN_MANAGER_Initialize 0007  
               __end_of_EUSART_SetErrorHandler 1204  EUSART_SetFramingErrorHandler@interruptHandler 0007  
                               _FVR_Initialize 1204                             EUSART_Write@txData 0007  
               __end_of_PIN_MANAGER_Initialize 11AA  
